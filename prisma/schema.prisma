// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Building {
  id        Int     @id @default(autoincrement())
  name      String
  latitude  Float
  longitude Float
  users     User[]
  chatId    String? // Link to the building's group chat
}

model User {
  id              String   @id @default(cuid()) // Clerk's ID as String
  name            String
  email           String   @unique
  phoneNumber     String?
  profileImageUrl String?
  buildingId      Int
  building        Building @relation(fields: [buildingId], references: [id])

  // Chat Relationships
  messages    Message[]
  chatMembers ChatMember[]
  // Listings
  listings    Listing[]

  // payment
  balance Float @default(0) // Virtual wallet balance
}

// Chat Model
model Chat {
  id        String   @id @default(cuid())
  name      String? // Optional for group chats
  isGroup   Boolean  @default(false) // Is this a group chat?
  createdAt DateTime @default(now()) // Timestamp when chat is created

  messages Message[] // Messages in the chat
  members  ChatMember[] // Users in the chat
}

// Members of Chat Model
model ChatMember {
  id       String   @id @default(cuid())
  chatId   String // Chat ID
  userId   String // Clerk's ID as String
  role     String   @default("member") // Roles: admin, member, etc.
  joinedAt DateTime @default(now()) // When the user joined the chat

  chat Chat @relation(fields: [chatId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

// Messages in Chat Model
model Message {
  id        String   @id @default(cuid())
  chatId    String // Chat ID
  senderId  String // Clerk's ID as String
  content   String // Message content
  createdAt DateTime @default(now()) // Timestamp when sent

  chat   Chat @relation(fields: [chatId], references: [id])
  sender User @relation(fields: [senderId], references: [id])
}

model Listing {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  price       Float
  category    String // e.g., "Textbooks", "Electronics", etc.
  latitude    Float
  longitude   Float
  userId      String // clerk's ID
  ImageUrl    String

  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
